@using BlazorCMS.Client.Services
@using BlazorCMS.Client.State
@using BlazorCMS.Shared.Dtos
@inherits BlazorState.BlazorStateComponent

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">BlazorCMS</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        @foreach (var section in Sections)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="@section.Id">
                    <span class="oi oi-plus" aria-hidden="true"></span> @section.Name
                </NavLink>
            </li>
        }
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    List<SectionDto> Sections => GetSections();

    private List<SectionDto> GetSections()
    {
        return Store.GetState<ClientState>().Sections;
    }

    private async Task LoadSections()
    {
        var result = await SectionService.Index();
        var state = Store.GetState<ClientState>();
        state.Sections = result.ResultObject?.ToList() ?? new List<SectionDto>();
        Store.SetState(state);
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadSections();
    }

}
