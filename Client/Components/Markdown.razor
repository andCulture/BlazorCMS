@using Markdig

<div class="markdown-container" id="@Id">
    @GetRenderedMarkdownString()
</div>

@code {

    [Inject]
    IJSRuntime JsRuntime { get; set; }

    [Parameter]
    public string Content { get; set; }

    private string _id;

    private string Id
    {
        get
        {
            if (_id == null)
            {
                _id = $"md-{System.Guid.NewGuid().ToString()}";
            }
            return _id;
        }
    }

    private static MarkdownPipeline MarkdownPipeline = new MarkdownPipelineBuilder()
        .UseAdvancedExtensions()
        .UseBootstrap()
        .UseEmojiAndSmiley()
        .UseSmartyPants()
        .Build();

    private MarkupString GetRenderedMarkdownString() => (MarkupString) Markdig.Markdown.ToHtml(
        markdown: Content,
        pipeline: MarkdownPipeline
    );

    protected override async void OnAfterRender(bool firstRender)
    {
        await JsRuntime.InvokeVoidAsync("BlazorCmsFunctions.applySyntaxHighlighting", $"#{Id}");
        base.OnAfterRender(firstRender);
    }

}
